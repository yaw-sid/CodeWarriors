function getInheritedBackgroundColor(el) {
  // get default style for current browser
  var defaultStyle = getDefaultBackground() // typically "rgba(0, 0, 0, 0)"
  
  // get computed color for el
  var backgroundColor = window.getComputedStyle(el).backgroundColor
  
  // if we got a real value, return it
  if (backgroundColor != defaultStyle) return backgroundColor

  // if we've reached the top parent el without getting an explicit color, return default
  if (!el.parentElement) return defaultStyle
  
  // otherwise, recurse and try again on parent element
  return getInheritedBackgroundColor(el.parentElement)
}

function getDefaultBackground() {
  // have to add to the document in order to use getComputedStyle
  var div = document.createElement("div")
  document.head.appendChild(div)
  var bg = window.getComputedStyle(div).backgroundColor
  document.head.removeChild(div)
  return bg
}


==================================
const jsdom = require('jsdom');
const { JSDOM } = jsdom;

const html = '<div style="color: ButtonText;"></div>'; // Replace with your HTML code

const dom = new JSDOM(html, {
  runScripts: 'dangerously',
  resources: 'usable'
});

dom.window.onload = () => {
  const div = dom.window.document.querySelector('div');
  const color = dom.window.getComputedStyle(div).color;
  
  if (color.startsWith('rgb')) {
    console.log('Color is an RGB value:', color);
  } else {
    const canvas = dom.window.document.createElement('canvas');
    const ctx = canvas.getContext('2d');
    
    ctx.fillStyle = color;
    ctx.fillRect(0, 0, 1, 1);
    
    const imageData = ctx.getImageData(0, 0, 1, 1);
    const rgb = `rgb(${imageData.data[0]}, ${imageData.data[1]}, ${imageData.data[2]})`;
    
    console.log('Color is a system color:', color, 'converted to', rgb);
  }
};



=========================================
function getInheritedBackgroundColor(el) {
  // get default style for current browser
  var defaultStyle = getDefaultBackground() // typically "rgba(0, 0, 0, 0)"
  
  // get computed color for el
  var backgroundColor = window.getComputedStyle(el).backgroundColor
  
  // if we got a real value, return it
  if (backgroundColor != defaultStyle) return backgroundColor

  // if we've reached the top parent el without getting an explicit color, return default
  if (!el.parentElement) return defaultStyle
  
  // otherwise, recurse and try again on parent element
  return getInheritedBackgroundColor(el.parentElement)
}

function getDefaultBackground() {
  // have to add to the document in order to use getComputedStyle
  var div = document.createElement("div")
  document.head.appendChild(div)
  var bg = window.getComputedStyle(div).backgroundColor
  document.head.removeChild(div)
  return bg
}


==================================
const jsdom = require('jsdom');
const { JSDOM } = jsdom;
const fs = require('fs');

const html = '<div class="red-bg"></div>'; // Replace with your HTML code
const css = fs.readFileSync('./styles.css', 'utf8'); // Replace with the path to your CSS file

const dom = new JSDOM(html, {
  runScripts: 'dangerously',
  resources: 'usable'
});

dom.window.document.documentElement.innerHTML += `<style>${css}</style>`;

dom.window.onload = () => {
  const div = dom.window.document.querySelector('.red-bg');
  const bgColor = dom.window.getComputedStyle(div).backgroundColor;
  
  if (bgColor === 'rgb(255, 0, 0)') {
    console.log('Background color is red!');
  } else {
    console.log('Background color is not red.');
  }
};
